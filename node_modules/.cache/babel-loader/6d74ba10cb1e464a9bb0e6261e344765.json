{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Desktop/Todoapp/todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Form from \"./comp/Form\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { nanoid } from \"nanoid\";\nimport FilterButton from \"./comp/FilterButton\";\nimport Todo from \"./comp/Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nfunction toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map(task => {\n    if (id === task.id) {\n      return { ...task,\n        completed: !task.completed\n      };\n    }\n\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n\nfunction deleteTask(id) {\n  const remainingTasks = tasks.filter(task => id !== task.id);\n  setTasks(remainingTasks);\n}\n\nfunction editTask(id, newName) {\n  const editedTaskList = tasks.map(task => {\n    if (id === task.id) {\n      return { ...task,\n        name: newName\n      };\n    }\n\n    return task;\n  });\n  setTasks(editedTaskList);\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [tasks.length, \" task Remaining\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EeZuGOM5z5o7WHkJMnH9Om8aBlo=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/ellocent/Desktop/Todoapp/todolist/src/App.js"],"names":["Form","React","useState","nanoid","FilterButton","Todo","FILTER_MAP","All","Active","task","completed","Completed","toggleTaskCompleted","id","updatedTasks","tasks","map","setTasks","deleteTask","remainingTasks","filter","editTask","newName","editedTaskList","name","FILTER_NAMES","Object","keys","App","props","setFilter","taskList","filterList","addTask","newTask","length"],"mappings":"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","sourcesContent":["import Form from\"./comp/Form\";\nimport React,{useState} from'react';\nimport './App.css';\nimport { nanoid } from \"nanoid\";\nimport FilterButton from \"./comp/FilterButton\";\nimport Todo from \"./comp/Todo\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\nfunction toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map((task) => {\n   \n    if (id === task.id) {\n    \n      return { ...task, completed: !task.completed };\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n\nfunction deleteTask(id) {\n  const remainingTasks = tasks.filter((task) => id !== task.id);\n  setTasks(remainingTasks);\n}\n\nfunction editTask(id, newName) {\n  const editedTaskList = tasks.map((task) => {\n    if (id === task.id) {\n      return { ...task, name: newName };\n    }\n    return task;\n  });\n  setTasks(editedTaskList);\n}\n\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n \n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = \n    { \n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n   };\n    setTasks([...tasks, newTask]);\n  }\n\n  return (\n    <div>\n      <Form addTask={addTask} />\n      <div>{filterList}</div>\n      <h2>{tasks.length} task Remaining</h2>\n      <ul>{taskList}</ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}