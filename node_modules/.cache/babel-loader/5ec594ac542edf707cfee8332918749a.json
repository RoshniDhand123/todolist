{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Desktop/Todoapp/todolist/src/comp/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newName.trim()) {\n      return;\n    }\n\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        value: newName || props.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditing(true),\n        ref: editButtonRef,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => props.deleteTask(props.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Todo, \"zMC/I5YeyukN4j0xOr4a2SmqI+s=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/ellocent/Desktop/Todoapp/todolist/src/comp/Todo.js"],"names":["React","useEffect","useRef","useState","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","handleChange","e","target","value","handleSubmit","preventDefault","trim","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMO,YAAY,GAAGR,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMS,aAAa,GAAGT,MAAM,CAAC,IAAD,CAA5B;;AAEA,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvBJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACT,OAAO,CAACU,IAAR,EAAL,EAAqB;AACnB;AACD;;AACDb,IAAAA,KAAK,CAACc,QAAN,CAAed,KAAK,CAACe,EAArB,EAAyBZ,OAAzB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,QAAMc,eAAe,gBACnB;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,EAAE,EAAEX,KAAK,CAACe,EADZ;AAEE,QAAA,KAAK,EAAEZ,OAAO,IAAIH,KAAK,CAACiB,IAF1B;AAGE,QAAA,QAAQ,EAAEV;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAML,UAAU,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,QAAMgB,YAAY,gBAChB;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,EAAE,EAAElB,KAAK,CAACe,EADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,cAAc,EAAEf,KAAK,CAACmB,SAHxB;AAIE,QAAA,QAAQ,EAAE,MAAMnB,KAAK,CAACoB,mBAAN,CAA0BpB,KAAK,CAACe,EAAhC;AAJlB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAEf,KAAK,CAACe,EAAvB;AAAA,kBACGf,KAAK,CAACiB;AADT;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMf,UAAU,CAAC,IAAD,CAF3B;AAGE,QAAA,GAAG,EAAEI,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMN,KAAK,CAACqB,UAAN,CAAiBrB,KAAK,CAACe,EAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiCA,sBAAO;AAAA,cAAMd,SAAS,GAAGe,eAAH,GAAqBE;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxEuBnB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\n\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <input\n          id={props.id}\n          value={newName || props.name}\n          onChange={handleChange}\n         \n        />\n      </div>\n      <div>\n        <button onClick={() => setEditing(false)}>Cancel</button>\n        <button type=\"submit\">Save</button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div >\n      <div >\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label  htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div >\n        <button\n          type=\"button\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit \n        </button>\n        <button\n          type=\"button\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete \n        </button>\n      </div>\n    </div>\n  );\n\n\n\n  return <li >{isEditing ? editingTemplate : viewTemplate}</li>;\n}"]},"metadata":{},"sourceType":"module"}