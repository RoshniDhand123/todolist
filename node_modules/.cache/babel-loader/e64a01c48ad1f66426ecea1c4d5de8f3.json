{"ast":null,"code":"var _jsxFileName = \"/home/ellocent/Desktop/Todoapp/todolist/src/comp/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newName.trim()) {\n      return;\n    }\n\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"New Name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          height: \"50px\",\n          width: \"400px\",\n          border: \"2px solid black\"\n        },\n        type: \"text\",\n        name: \"name\",\n        id: props.id,\n        value: newName || props.name,\n        onChange: handleChange,\n        ref: \"editFieldRef\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"black\",\n          backgroundColor: \"white\",\n          width: \"200px\",\n          height: \"37px\",\n          marginTop: \"10px\"\n        },\n        onClick: () => setEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"white\",\n          backgroundColor: \"black\",\n          width: \"200px\",\n          marginTop: \"10px\",\n          height: \"37px\",\n          marginLeft: \"5px\",\n          border: \"none\"\n        },\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: \"30px\",\n          height: \"30px\",\n          marginTop: \"10px\"\n        },\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"black\",\n          backgroundColor: \"white\",\n          width: \"200px\",\n          height: \"37px\",\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        onClick: () => setEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"white\",\n          backgroundColor: \"#cd4747\",\n          width: \"200px\",\n          marginTop: \"10px\",\n          height: \"37px\",\n          marginLeft: \"5px\",\n          border: \"none\"\n        },\n        type: \"button\",\n        onClick: () => props.deleteTask(props.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n\n  return isEditing ? editingTemplate : viewTemplate;\n}\n\n_s(Todo, \"zMC/I5YeyukN4j0xOr4a2SmqI+s=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/ellocent/Desktop/Todoapp/todolist/src/comp/Todo.js"],"names":["React","useEffect","useRef","useState","Todo","props","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","handleChange","e","target","value","handleSubmit","preventDefault","trim","editTask","id","editingTemplate","name","height","width","border","color","backgroundColor","marginTop","marginLeft","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React, { useEffect,useRef,  useState } from \"react\";\nimport './Form.css';\n\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form onSubmit={handleSubmit}>\n      <div >\n      <span>New Name for {props.name}</span>\n      <br/>\n        <input  style={{height:\"50px\",width:\"400px\",border:\"2px solid black\"}}\n        type=\"text\"\n        name=\"name\"\n          id={props.id}\n          value={newName || props.name}\n          onChange={handleChange}\n          ref =\"editFieldRef\"\n         \n        />\n      </div>\n      <div>\n        <button style={{color:\"black\",backgroundColor:\"white\",width:\"200px\",height:\"37px\",marginTop:\"10px\"}}onClick={() => setEditing(false)}>Cancel</button>\n        <button style={{color:\"white\",backgroundColor:\"black\",width:\"200px\",marginTop:\"10px\",\n        height:\"37px\",marginLeft:\"5px\",border:\"none\"}} type=\"submit\">Save</button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div >\n      <div >\n        <input style={{width:\"30px\",height:\"30px\",marginTop:\"10px\"}}\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label  htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div >\n     \n      \n        <button style={{color:\"black\",backgroundColor:\"white\",width:\"200px\",height:\"37px\",marginTop:\"10px\"}}\n          type=\"button\"\n          onClick={() => setEditing(true)}\n         \n        >\n          Edit \n        </button>\n        <button style={{color:\"white\",backgroundColor:\"#cd4747\",width:\"200px\",marginTop:\"10px\",\n        height:\"37px\",marginLeft:\"5px\",border:\"none\"}}\n          type=\"button\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete \n        </button>\n        </div>\n      </div>\n    \n  );\n\n\n\n  return isEditing ? editingTemplate : viewTemplate;\n}"]},"metadata":{},"sourceType":"module"}